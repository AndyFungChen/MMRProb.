from scipy.stats import norm
while True:
    num = int(input('Teammates amount>>'))

    if num == 0 or num>5:
        print('Magic Error')
    elif num == 2:
        s01 = float(input('Sigma1='))
        m01 = float(input('MMR1='))
        s02 = float(input('Sigma2='))
        m02 = float(input('MMR2='))
        s = float((s01+s02)/2)
        m = float((m01+m02)/2)
    elif num == 3:
        s01 = float(input('Sigma1='))
        m01 = float(input('MMR1='))
        s02 = float(input('Sigma2='))
        m02 = float(input('MMR2='))
        s03 = float(input('Sigma3='))
        m03 = float(input('MMR3='))
        s = float((s01+s02+s03)/3)
        m = float((m01+m02+m03)/3)
    elif num == 4:
        s01 = float(input('Sigma1='))
        m01 = float(input('MMR1='))
        s02 = float(input('Sigma2='))
        m02 = float(input('MMR2='))
        s03 = float(input('Sigma3='))
        m03 = float(input('MMR3='))
        s04 = float(input('Sigma4='))
        m04 = float(input('MMR4='))
        s = float((s01+s02+s03+s04)/4)
        m = float((m01+m02+m03+m04)/4)
    elif num == 5:
        s01 = float(input('Sigma1='))
        m01 = float(input('MMR1='))
        s02 = float(input('Sigma2='))
        m02 = float(input('MMR2='))
        s03 = float(input('Sigma3='))
        m03 = float(input('MMR3='))
        s04 = float(input('Sigma4='))
        m04 = float(input('MMR4='))
        s05 = float(input('Sigma5='))
        m05 = float(input('MMR5='))
        s = float((s01+s02+s03+s04+s05)/5)
        m = float((m01+m02+m03+m04+m05)/5)
    else:
        s = float(input('Sigma='))
        m = float(input('MMR='))

    ch = 1-float(norm.cdf((50-m)/s))
    di = 1-float(norm.cdf((44-m)/s))
    p1 = 1-float(norm.cdf((40-m)/s))
    p2 = 1-float(norm.cdf((36-m)/s))
    p3 = 1-float(norm.cdf((32-m)/s))
    g1 = 1-float(norm.cdf((30-m)/s))
    g2 = 1-float(norm.cdf((28-m)/s))
    g3 = 1-float(norm.cdf((26-m)/s))
    s1 = 1-float(norm.cdf((25-m)/s))
    s2 = 1-float(norm.cdf((24-m)/s))
    s3 = 1-float(norm.cdf((23-m)/s))
    s4 = 1-float(norm.cdf((22-m)/s))
    s5 = 1-float(norm.cdf((21-m)/s))
    b1 = 1-float(norm.cdf((20-m)/s))
    b2 = 1-float(norm.cdf((19-m)/s))
    b3 = 1-float(norm.cdf((18-m)/s))
    b4 = 1-float(norm.cdf((17-m)/s))
    b5 = 1-float(norm.cdf((16-m)/s))
    c1 = 1-float(norm.cdf((15-m)/s))
    c2 = 1-float(norm.cdf((14-m)/s))
    c3 = 1-float(norm.cdf((13-m)/s))
    c4 = 1-float(norm.cdf((12-m)/s))
    c5 = 1-float(norm.cdf((11-m)/s))

    print('Champion>>', (ch*100),'%')
    print('Diamond>>', (di*100),'%')
    print('Platinum 1>>', (p1*100),'%')
    print('Platinum 2>>', (p2*100),'%')
    print('Platinum 3>>', (p3*100),'%')
    print('Gold 1>>', (g1*100),'%')
    print('Gold 2>>', (g2*100),'%')
    print('Gold 3>>', (g3*100),'%')
    print('Silver 1>>', (s1*100),'%')
    print('Silver 2>>', (s2*100),'%')
    print('Silver 3>>', (s3*100),'%')
    print('Silver 4>>', (s4*100),'%')
    print('Silver 5>>', (s5*100),'%')
    print('Bronze 1>>', (b1*100),'%')
    print('Bronze 2>>', (b2*100),'%')
    print('Bronze 3>>', (b3*100),'%')
    print('Bronze 4>>', (b4*100),'%')
    print('Bronze 5>>', (b5*100),'%')
    print('Copper 1>>', (c1*100),'%')
    print('Copper 2>>', (c2*100),'%')
    print('Copper 3>>', (c3*100),'%')
    print('Copper 4>>', (c4*100),'%')
    print('Copper 5>>', (c5*100),'%')
    print('The output from this executable program is for reference only, you need to be liabie for all of the errors.')
    print('If you find any bug(s), please report it in Discord(AndyFungChen#9003).')
    print('R6MMRProb(For Y5S2 in ver.1.a)-----COPYRIGHTÂ© 2020 AndyFungChen, licensed CC BY-NC')